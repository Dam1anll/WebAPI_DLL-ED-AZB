// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_DLL_ED_AZB.Data;

namespace WebAPI_DLL_ED_AZB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231211054751_InitialDataBaseMigration")]
    partial class InitialDataBaseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HumedadIdeal")
                        .HasColumnType("int");

                    b.Property<int>("IdSensor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SensorId")
                        .HasColumnType("int");

                    b.Property<int>("TemperaturaIdeal")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroCelular")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Usuario_Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPlanta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPlanta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Usuario_Plantas");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Planta", b =>
                {
                    b.HasOne("WebAPI_DLL_ED_AZB.Data.Models.Sensor", "Sensor")
                        .WithMany("Plantas")
                        .HasForeignKey("SensorId");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Usuario_Planta", b =>
                {
                    b.HasOne("WebAPI_DLL_ED_AZB.Data.Models.Planta", "Planta")
                        .WithMany("Usuario_Plantas")
                        .HasForeignKey("IdPlanta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_DLL_ED_AZB.Data.Models.Usuario", "Usuario")
                        .WithMany("Usuario_Planta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Planta", b =>
                {
                    b.Navigation("Usuario_Plantas");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Sensor", b =>
                {
                    b.Navigation("Plantas");
                });

            modelBuilder.Entity("WebAPI_DLL_ED_AZB.Data.Models.Usuario", b =>
                {
                    b.Navigation("Usuario_Planta");
                });
#pragma warning restore 612, 618
        }
    }
}
